import customtkinter as ctk
from tkinter import filedialog, messagebox
from PIL import Image
import os


class TaskPage13(ctk.CTkFrame):
    def __init__(self, parent):
        super().__init__(parent, corner_radius=10, fg_color="transparent")

        ctk.set_appearance_mode("dark")#–¥–µ–ª–∞–µ–º –∫—Ä–∞—Å–æ—Ç—É
        ctk.set_default_color_theme("blue")

        self.image_answers = []  #—Ö—Ä–∞–Ω–µ–Ω–∏t –≤—Å–µ –∫–∞—Ä—Ç–∏–Ωrb –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.current_image_index = -1  #–∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏
        self.image_answers_id =[]#—Ö—Ä–∞–Ω–∏—Ç –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.current_image = None  #—Ç–µ–∫—É—â—è—è –∫–∞—Ä—Ç–∏–Ω–∫–∞

        self.create_tab_13()

    def create_tab_13(self):
        tab = ctk.CTkFrame(self, corner_radius=15)
        tab.pack(fill='both', expand=True, padx=20, pady=20)

        zadanie_frame = ctk.CTkFrame(tab, corner_radius=10)#—Ñ—Ä–µ–π–º –¥–ª—è –∑–∞–¥–∞–Ω–∏—è
        zadanie_frame.pack(fill='both', expand=True, pady=(0, 10))

        zadanie_text = ("<zadanie zadaniizaanie/.,kphsipfjpsodjvjkajvpkihb'kihspjovjspvipnwipvnpwijvipwnnihweifiowejfiwefioweoiwehfgwejwejbvweuob]uovbwuevenioweuvbbweoubvuweibvbowuevuiwebbovubweighwe0ingwqho")#—Å—é–¥–∞ —Ñ—Ç–æ—Ç–æ –∑–∞–¥–∞–Ω–∏—è
        zadanie = ctk.CTkTextbox(zadanie_frame, font=ctk.CTkFont(size=14), wrap="word", height=400, border_width=1, border_color=("#3E454A", "#949A9F"))#—Ç—É—Ç –º–µ–Ω—è—Ç—å —Ä–∞—Ö–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è
        zadanie.pack(fill='both', expand=True, padx=10, pady=10)
        zadanie.insert("1.0", zadanie_text)
        zadanie.configure(state="disabled")

        answer_frame = ctk.CTkFrame(tab, corner_radius=10)#—Ñ—Ä–µ–π–º –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        answer_frame.pack(fill='both', expand=True, pady=10)

        control_frame = ctk.CTkFrame(answer_frame, fg_color="transparent")#—Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—á –º–µ–∂–¥—É –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
        control_frame.pack(fill='x', padx=10, pady=10)

        upload_photo = ctk.CTkButton(control_frame, text="üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ", command=self.upload_photo, font=ctk.CTkFont(size=14, weight="bold"), corner_radius=8, fg_color=("#3B8ED0", "#1F6AA5"), hover_color=("#36719F", "#144870"))
        upload_photo.pack(side='left', padx=(0, 10))#–∫–Ω–æ–ø–∫–∞ –∑–∞—à—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏

        self.prev = ctk.CTkButton(control_frame, text="‚óÄ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ", command=self.show_previous_image, font=ctk.CTkFont(size=12), corner_radius=6, state="disabled")
        self.prev.pack(side='left', padx=(0, 5))#–∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        self.next = ctk.CTkButton(control_frame, text="–°–ª–µ–¥—É—é—â–µ–µ ‚ñ∂", command=self.show_next_image, font=ctk.CTkFont(size=12), corner_radius=6, state="disabled")
        self.next.pack(side='left', padx=(0, 10))#–∫–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        self.nomer_inage = ctk.CTkLabel(control_frame, text="–§–æ—Ç–æ: 0/0", font=ctk.CTkFont(size=12), text_color=("gray50", "gray70"))
        self.nomer_inage.pack(side='left', padx=10)#–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ—è –æ –ø–æ—Ä—è–¥–∫–æ–≤–æ–º –Ω–æ–º–µ—Ä–µ —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ

        self.image_frame = ctk.CTkFrame(answer_frame, corner_radius=10)#—Ñ—Ä–µ–π–º –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.image_frame.pack(fill='both', expand=True, padx=10, pady=(0, 10))

        preview_label = ctk.CTkLabel(self.image_frame, text="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", font=ctk.CTkFont(size=16, weight="bold"))
        preview_label.pack(pady=(10, 5))

        self.image_label = ctk.CTkLabel(self.image_frame, text="–§–æ—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ\n\n–ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", font=ctk.CTkFont(size=14), text_color=("gray50", "gray70"), fg_color=("gray85", "gray25"), corner_radius=8, height=200)
        self.image_label.pack(fill='both', expand=True, padx=20, pady=10)#–ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ –µ—Å—Ç—å —ç—Ç–æ

        info_frame = ctk.CTkFrame(answer_frame, corner_radius=8, fg_color=("gray90", "gray20"))#—Ñ—Ä–µ–π–º –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
        info_frame.pack(fill='x', padx=10, pady=10)

        self.image_info = ctk.CTkLabel(info_frame, text="", font=ctk.CTkFont(size=12), justify="left", height=40)
        self.image_info.pack(fill='x', padx=10, pady=5)#–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–∏–Ω–∫–µ

        clear_frame = ctk.CTkFrame(answer_frame, fg_color="transparent")#—Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
        clear_frame.pack(fill='x', padx=10, pady=5)

        clear_current = ctk.CTkButton(clear_frame, text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ", command=self.clear_current_image, font=ctk.CTkFont(size=12), corner_radius=6, fg_color=("#D35B5B", "#8B3A3A"), hover_color=("#B74A4A", "#6B2C2C"), state="disabled")
        clear_current.pack(side='left', padx=(0, 10))
        self.clear_current = clear_current#–∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        clear_all = ctk.CTkButton(clear_frame, text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", command=self.clear_all_images, font=ctk.CTkFont(size=12), corner_radius=6, fg_color=("#D35B5B", "#8B3A3A"), hover_color=("#B74A4A", "#6B2C2C"), state="disabled")
        clear_all.pack(side='left')
        self.clear_all = clear_all#–∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

    def upload_photo(self):#–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —É  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        file_types = [
            ('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', '*.jpg *.jpeg *.png *.gif *.bmp *.tiff'),
            ('JPEG', '*.jpg *.jpeg'),
            ('PNG', '*.png'),
            ('–í—Å–µ —Ñ–∞–π–ª—ã', '*.*')
        ]

        file_paths = filedialog.askopenfilenames(
            title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ",
            filetypes=file_types
        )

        if file_paths:
            for file_path in file_paths:
                self.load_image(file_path)

            if self.image_answers:#–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
                self.current_image_index = 0
                self.show_current_image()

    def load_image(self, file_path):#–¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –º–∞—Å–∏–≤
        try:
            image = Image.open(file_path)
            file_info = {
                'image': image,
                'path': file_path,
                'name': os.path.basename(file_path),
                'size': os.path.getsize(file_path) / 1024,  # –≤ –ö–ë
                'resolution': image.size
            }
            self.image_answers.append(file_info)
            file_info_answers = {
                'path': file_path
            }
            self.image_answers_id.append(file_info_answers)

            self.update_controls_state()#–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {os.path.basename(file_path)}:\n{str(e)}")

    def show_current_image(self):#–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ–ª—å—Ö–æ–≤–∞—Ç–µ–ª—è
        if 0 <= self.current_image_index < len(self.image_answers):
            file_info = self.image_answers[self.current_image_index]

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            info_text = (f"–§–∞–π–ª: {file_info['name']}\n"
                         f"–†–∞–∑–º–µ—Ä: {file_info['size']:.1f} –ö–ë\n"
                         f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {file_info['resolution'][0]}x{file_info['resolution'][1]}\n"
                         f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {self.current_image_index + 1} –∏–∑ {len(self.image_answers)}")
            self.image_info.configure(text=info_text)

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image = file_info['image'].copy() # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
            max_size = (12000, 300)
            image.thumbnail(max_size, Image.Resampling.LANCZOS)

            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è CustomTkinter
            ctk_image = ctk.CTkImage(
                light_image=image,
                dark_image=image,
                size=image.size
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É
            self.current_image = ctk_image
            self.image_label.configure(image=self.current_image, text="", fg_color="transparent"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
            self.nomer_inage.configure(text=f"–§–æ—Ç–æ: {self.current_image_index + 1}/{len(self.image_answers)}")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            self.update_navigation_buttons()

    def show_previous_image(self):#–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        if self.current_image_index > 0:
            self.current_image_index -= 1
            self.show_current_image()

    def show_next_image(self):#–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        if self.current_image_index < len(self.image_answers) - 1:
            self.current_image_index += 1
            self.show_current_image()

    def clear_current_image(self):#—É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—é—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        if 0 <= self.current_image_index < len(self.image_answers):
            del self.image_answers[self.current_image_index]

            if not self.image_answers:#—è —ç—Ç—É —Ñ–∏–≥–Ω—é, —Ç—É—Ç –∫–∞–∫ –±—ã –∫–æ—Ä–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è –∏–Ω–¥–µ–∫—Å—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫
                self.current_image_index = -1
                self.show_no_images()
            elif self.current_image_index >= len(self.image_answers):
                self.current_image_index = len(self.image_answers) - 1
                self.show_current_image()
            else:
                self.show_current_image()

            self.update_controls_state()#—é–ª–æ–∫–∞–µ–º –µ—Å–ª–∏ –Ω–∞–¥–æ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è

    def clear_all_images(self):#—É–Ω–∏—á—Ç–æ–∂–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.image_answers = []
        self.current_image_index = -1
        self.show_no_images()
        self.update_controls_state()

    def show_no_images(self):#–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —á—Ç–æ –º—ã —É–Ω–º—á—Ç–æ–∂–∏–ª–∏ –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –Ω–∞–¥–æ –∑–∞–≥—Ä—É—Ö–∏—Ç—å –Ω–æ–≤—ã–µ
        self.image_label.configure(image="", text="–§–æ—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ\n\n–ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", fg_color=("gray85", "gray25"))
        self.image_info.configure(text="")
        self.nomer_inage.configure(text="–§–æ—Ç–æ: 0/0")

    def update_controls_state(self):#–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        has_images = len(self.image_answers) > 0

        state = "normal" if has_images else "disabled"
        self.clear_current.configure(state=state)
        self.clear_all.configure(state=state)
        self.prev.configure(state=state)
        self.next.configure(state=state)

        if has_images and self.current_image_index == -1:#–µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ
            self.current_image_index = 0
            self.show_current_image()

    def update_navigation_buttons(self):#–æ–±–Ω–æ–≤–ª—è–µ–º –µ—Å–ª–∏ –Ω–∞–¥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self.prev.configure(state="normal" if self.current_image_index > 0 else "disabled")#—Å–ª–µ–¥—É—â–µ–µ
        self.next.configure(state="normal" if self.current_image_index < len(self.image_answers) - 1 else "disabled")#–ø—Ä–µ–¥—ã–¥—É—â–µ–µ


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    root = ctk.CTk()
    root.title("–ó–∞–¥–∞—á–∞ ‚Ññ13")
    root.geometry("800x1200")

    app = TaskPage13(root)
    app.pack(fill='both', expand=True, padx=10, pady=10)

    root.mainloop()


